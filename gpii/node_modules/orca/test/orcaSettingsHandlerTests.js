/*
Orca Settings Handler Tests

Copyright 2013 Emergya

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

"use strict";

var fluid = require("universal"),
    jqUnit = fluid.require("jqUnit");

require("orca");
var orca = fluid.registerNamespace("gpii.orca");

jqUnit.module("OrcaSettingsHandler Module");

jqUnit.test("Running tests for Orca Settings Handler", function () {

    var getPayload = {
        "org.gnome.orca": [{
            "settings": {
                "enableBraille": null,
                "enableEchoByWord": null,
                "enableEchoByCharacter": null,
                "voices.default.rate": null,
                "enableTutorialMessages": null,
                "voices.default.family": null,
                "verbalizePunctuationStyle": null
            }
        }]
    };
    var defaultSettingsPayload = orca.get(getPayload);
    jqUnit.assertTrue("orca.get is returning a valid Object", defaultSettingsPayload);

    var setPayload = {
        "org.gnome.orca": [{
            "settings": {
                "enableBraille": true,
                "enableEchoByWord": true,
                "enableEchoByCharacter": false,
                "voices.default.rate": 100,
                "enableTutorialMessages": false,
                "voices.default.family": { "locale": "es", "name": "spanish-latin-american" },
                "verbalizePunctuationStyle": 0
            }
        }]
    };

    var returnPayload = orca.set(setPayload);
    var settings = fluid.copy(returnPayload["org.gnome.orca"][0].settings);
    fluid.each(settings, function (v, k) {
        var expectedValue = setPayload["org.gnome.orca"][0].settings[k];
        jqUnit.assertDeepEq("Setting " + k + " is being set well", expectedValue, v["newValue"]);
    });

    var returnGetPayload = orca.get(getPayload);
    jqUnit.assertDeepEq("Get payload is as expected after updating the settings", returnGetPayload, setPayload);

    var restoreReturnPayload = orca.set(defaultSettingsPayload);
    var currentSettingsPayload = orca.get(getPayload);
    jqUnit.assertDeepEq("Settings are being restored well", currentSettingsPayload, defaultSettingsPayload);

});
