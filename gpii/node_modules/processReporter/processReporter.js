/**
 * GPII Process Reporter Bridge (Linux -- GLiBTop).
 *
 * Copyright 2015 OCAD University
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * You may obtain a copy of the License at
 * https://github.com/gpii/universal/LICENSE.txt
 */

(function () {
    "use strict";

    var fluid = require("universal");
    var gpii = fluid.registerNamespace("gpii");
    require("./processesBridge.js");

    var processes = gpii.processes();

    fluid.require("gsettingsBridge", require);
    var gsettings = fluid.registerNamespace("gpii.gsettings");

    fluid.registerNamespace("gpii.processReporter");
    fluid.defaults("gpii.processReporter.find", {
        gradeNames: "fluid.function",
        argumentMap: {
            command: 0
        }
    });

    fluid.defaults("gpii.processReporter.findAndCheckSetting", {
        gradeNames: "fluid.function",
        argumentMap: {
            command: 0,
            schema: 1,
            setting: 2
        }
    });

    gpii.processReporter.find = function (commandName) {
        var procInfos = processes.findSolutionsByCommands([commandName]);
        if (procInfos.length === 0) {
            procInfos.push(processes.initProcInfoNotRunning(commandName));
        }
        return { "processes": procInfos };
    };

    gpii.processReporter.findAndCheckSetting = function (commandName, schema, setting) {
        var procInfo = gpii.processReporter.find(commandName);
        var settingValue = gsettings.getSingleKey(schema, setting);
        procInfo["setting"] = {
            "schema": schema,
            "key": setting,
            "value": settingValue
        };
        return procInfo;
    };

})();
