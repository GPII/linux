/**
 * GPII PackageKit Process Reporter Tests
 *
 * Copyright 2015 Inclusive Design Research Centre, OCAD University
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * You may obtain a copy of the License at
 * https://github.com/gpii/universal/LICENSE.txt
 */
"use strict";

var fluid = require("universal"),
    jqUnit = fluid.require("jqUnit");

require("processReporter");

var gpii = fluid.registerNamespace("gpii");
var processReporter = fluid.registerNamespace("gpii.processReporter");

jqUnit.module("GPII Linux ProcessReporter Module");

jqUnit.test("Running tests for Linux/GNOME Process Reporter", function () {
    jqUnit.expect(4);

    // Check that the bridge is loaded and required methods are available
    //
    var methods = ["find", "findAndCheckSetting"];
    for (var method in methods) {
        jqUnit.assertTrue("Checking availability of method '" + method + "'",
                          (methods[method] in processReporter));
    }

    jqUnit.assertDeepEq("Checking that 'find' reports 'proccesses'",
                        ["processes"],
                        Object.keys(gpii.processReporter.find("orca")));

    jqUnit.assertTrue(
        "Checking that 'findAndCheckSetting' reports 'processes', 'setting'",
        Object.keys(gpii.processReporter.findAndCheckSetting(
            "orca",
            "org.gnome.desktop.a11y.applications",
            "screen-reader-enabled"
        )));
});
