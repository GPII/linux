/*!
GPII Prcoess Bridge Demo.

Copyright 2014 Inclusive Design Research Centre, OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

/*global require */
"use strict";

var readline = require ("readline");
var fluid = require("universal");
require ("./processes.js");

var jobs = fluid.registerNamespace ("gpii.processes");

var seekInput = readline.createInterface ({
  input: process.stdin,
  output: process.stdout
});

var stateChangeHandler = function (procInfo) {
  console.log (procInfo.command + ": run state switched to " + procInfo.state +
               " (" +
               ( jobs.isRunning (procInfo.state) ? "Running" : "Stopped" ) + 
               ")");
};

// This result is an array, but interested only in the first one.
var orcaProc = jobs.initNotRunning ("orca");
var orcaProcs = jobs.findProcessesByCommand ("orca");
if (orcaProcs.length > 0) {
  orcaProc = orcaProcs[0];
}
jobs.trackRunState (stateChangeHandler);


// Periodically check if Orca has quit.
// orcaMonitor.intervalID = setInterval (function() {
//   jobs.monitorChanged (orcaProc, orcaMonitor);
// });

// Periodically check if Orca has changed state.
var orcaMonitor = jobs.initMonitor (orcaProc);
orcaMonitor.intervalID = setInterval (function() {
  jobs.monitorRunningChanged (orcaMonitor);
});

console.log ("jobs = " + jobs);
console.log ("periodical:  " + orcaMonitor.intervalID);
console.log ("Waiting...");

seekInput.question ("Stop? ", function (answer) {
  console.log ("You said " + answer);
  if (answer === "yes") {
    console.log ("Okay, stopping");
    clearInterval (orcaMonitor.intervalID);
    jobs.stopTrackingRunState (stateChangeHandler);
    seekInput.close();
  }
  else {
    console.log ("Okay, continuing");
  }
});
