/*!
GPII Node.js GSettings Bridge

Copyright 2012 Steven Githens

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("universal");
    var gpii = fluid.registerNamespace("gpii");
    var exec = require("child_process").exec;
    var util = require("util");
    var nodeGSettings = require("./nodegsettings/build/Release/nodegsettings.node");

    fluid.registerNamespace("gpii.launch");
    
    gpii.gsettings = gpii.gsettings || {};

    gpii.gsettings.get = function(settingsarray) {
        var app = fluid.copy(settingsarray);
        for (var appId in app) {
            for (var j = 0; j < app[appId].length; j++) {
                var schemaId = app[appId][j].options.schema;
                var settings = app[appId][j].settings;
                if (settings === null) {
                    var keys = nodeGSettings.get_gsetting_keys(schemaId);
                    app[appId][j].settings = {};
                    for (var k = 0; k < keys.length; k++) {
                        var key = keys[k];
                        app[appId][j].settings[key] = nodeGSettings.get_gsetting(schemaId,key);
                    }                        
                }
                else {
                    for (var settingKey in settings) {
                        settings[settingKey] = nodeGSettings.get_gsetting(schemaId,settingKey);
                    }

                }
            }
        }
        return app;
    };

    gpii.gsettings.set = function(settingsarray) {
        var app = fluid.copy(settingsarray);
        for (var appId in app) {
            for (var j = 0; j < app[appId].length; j++) {
                var schemaId = app[appId][j].options.schema;
                var settings = app[appId][j].settings;
                for (var settingKey in settings) {
                    var value = settings[settingKey];
                    var oldValue = nodeGSettings.get_gsetting(schemaId,settingKey);
                    nodeGSettings.set_gsetting(schemaId,settingKey,value);
                    settings[settingKey] = {
                        "oldValue": oldValue,
                        "newValue": value
                    };
                }
            }
        }
        return app;
    }

})();