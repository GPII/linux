(function () {

    "use strict";

    var fluid = require("universal");
    var gpii = fluid.registerNamespace("gpii");
    var exec = require("child_process").exec;
    var util = require("util");
    var nodeGSettings = require("./nodegsettings/build/Release/nodegsettings.node");

    fluid.registerNamespace("gpii.launch");
    
    gpii.gsettings = gpii.gsettings || {};

    gpii.gsettings.get = function(settingsarray) {
        var togo = settings; // TODO deep clone this
        for (var i = 0; i < settingsarray.length; i++) {
            var settings = settingsarray[i];
            for (var schemaId in settings) {
                for (var settingKey in settings[schemaId]) {
                    settings[schemaId][settingKey] = nodeGSettings.get_gsetting(schemaId,settingKey);
                }
            }
        }
        return settings;
    };

    gpii.gsettings.set = function(settingsarray) {
        var togo = settingsarray; //TODO deep clone this
        for (var i = 0; i < settingsarray.length; i++) {    
            var settings = settingsarray[i];
            for (var schemaId in settings) {
                for (var settingKey in settings[schemaId].settings) {
                    var value = settings[schemaId].settings[settingKey];
                    //util.puts("Going to set: "+schemaId+" : "+settingKey+" : "+value+"\n");
                    var oldValue = nodeGSettings.get_gsetting(schemaId,settingKey);
                    nodeGSettings.set_gsetting(schemaId,settingKey,value);
                    settings[schemaId].settings[settingKey] = {
                        "oldValue": oldValue,
                        "newValue": value
                    };
                }
            }
        }
        return togo;
    }

})();