/*!
 * GPII Orca Settings Handler
 *
 * Copyright 2013 Emergya
 * Author Javier Hern√°ndez <jhernandez@emergya.com>
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * You may obtain a copy of the License at
 * https://github.com/gpii/universal/LICENSE.txt
 * */

(function () {
    "use strict";

    var fluid = require("universal");
    var gpii = fluid.registerNamespace("gpii");
    var fs = require("fs");
    var spawn = require("child_process").spawn;

    var ORCA_ARGS = ["--disable", "speech",
                     "--disable", "braille",
                     "--disable", "braille-monitor",
                     "--disable", "main-window",
                     "--disable", "splash-window"];

    var PROFILE_SKEL = {
        "profile": ["Default", "default"],
        "pronunciations": {},
        "keybindings": {}
    };

    var HOME = process.env.HOME;
    var XDG_DATA_HOME = process.env.XDG_DATA_HOME || HOME + "/.local/share";
    var orcaSettingsFile = XDG_DATA_HOME + "/orca/user-settings.conf";

    fluid.registerNamespace("gpii.launch");

    gpii.orca = gpii.orca || {};


    function wait(millis) {
        var date = new Date();
        var curDate = null;
      
        do { curDate = new Date(); }
        while(curDate-date < millis);
    }

    function getJSONFromFile(file) {
        return JSON.parse(fs.readFileSync(file, "utf8"));
    }
    
    function createProfile(profile) {
        var string = JSON.stringify(PROFILE_SKEL)
        return JSON.parse(string.replace(/[D|d]+efault/g, profile));
    }
    
    function addCustomSettings (settings, profile) {
        for (var k in settings) {
          profile[k] = settings[k];
        };
        return profile;
    }

    gpii.orca.set = function(settingsarray) {
        var app = fluid.copy(settingsarray);

        var settings = app["org.gnome.orca"][0].settings;
        var user = app["org.gnome.orca"][0].options.user;

        fluid.log("orcaSettingsHandler: User ", user, 
                  " has requested these following settings: ", settings);

        if (!fs.existsSync(orcaSettingsFile)) {
            var orcaSpawn = spawn("orca", ORCA_ARGS);

            while(!fs.existsSync(orcaSettingsFile)) {
                wait(500);
            };

            orcaSpawn.kill("SIGKILL");
        };

        var userSettings = getJSONFromFile(orcaSettingsFile);
        var newProfile = createProfile(user);
        var customizedProfile = addCustomSettings(settings, newProfile);

        userSettings.profiles[user] = customizedProfile;
        userSettings.general.startingProfile = [user, user];

        fs.writeFileSync(orcaSettingsFile, 
                         JSON.stringify(userSettings, null, 4));

        return app;
    }

})();
