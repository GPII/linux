/*!
GPII Node.js PackageKit Bridge

Copyright 2012 Steven Githens
Copyright 2013 Inclusive Design Research Centre, OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

var fluid = require ('universal'),
    jqUnit = fluid.require ('jqUnit'),
    packagekit = require('./build/Release/nodepackagekit.node');

jqUnit.module ('PackageKit Bridge node add-on module');

jqUnit.test ("Testing PackageKit Bridge", function() {
    console.log ("Testing searchPackage() for 'tuxguitar'");
    var pkg = packagekit.searchPackage ('tuxguitar');
    jqUnit.assertNotEquals ("No package for tuxguitar was found during search",
                            0, pkg.length);
    var name = pkg[0].id.indexOf ("tuxguitar");
    jqUnit.assertNotEquals ("No tuxguitar package found, found " +
                            pkg[0].id + " instead",
                            -1, name);

    console.log ("Checking that tuxguitar package is not installed");
    pkg = packagekit.searchPackage ('tuxguitar');
    jqUnit.assertNotEquals ("No package for tuxguitar found", 0, pkg.length);

    // TODO:  This tests that tuxguitar is not installed, but it's not really
    // an error if it's there.  For now, manually remove tuxguitar
    // before running tests.
    var notInstalled = pkg[0].data.indexOf ('installed');
    jqUnit.assertEquals ("Package tuxguitar is installed, data property is: '" +
                         pkg[0].data + "'",
                         -1, notInstalled);

    console.log ("Testing installPackage()");
    pkg = packagekit.searchPackage ('tuxguitar');
    jqUnit.assertNotEquals ("No package tuxguitar available; cannot install",
                            0, pkg.length);

    packagekit.installPackage (pkg[0].id);
    pkg = packagekit.searchPackage ('tuxguitar');
    var installed = pkg[0].data.indexOf ('installed');
    jqUnit.assertNotEquals ("Failure installing tuxguitar, data property is: '"
                            + pkg[0].data + "'",
                            -1, installed);

    console.log ("Testing removePackage()");
    pkg = packagekit.searchPackage ('tuxguitar');
    jqUnit.assertNotEquals ("No package tuxguitar installed; cannot remove",
                            0, pkg.length);

    packagekit.removePackage (pkg[0].id);
    pkg = packagekit.searchPackage ('tuxguitar');
    var removed = pkg[0].data.indexOf ('installed');
    jqUnit.assertEquals (
                    "Failed to remove tuxguitar package, data property is: '" +
                    pkg[0].data + "'",
                    -1, removed);
});
